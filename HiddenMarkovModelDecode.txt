# coding: utf-8
import os, sys, math,time,pickle

start=time.clock()
def hmmdecode():
    a = {}
    b = {}
    finaloutstr=""
    finalread=open("hmmmodel.txt","r")
    a1=pickle.load(finalread)
    b1=pickle.load(finalread)
    states=pickle.load(finalread)
   # print states
    for tags,valss in a1.items():
        if tags[0] in a:
            a[tags[0]][tags[1]] = (float)(valss)
        else:
            a[tags[0]] = {}
            a[tags[0]][tags[1]] = (float)(valss)
    for words, valss in b1.items():
        if words[0] in b:
            b[words[0]][words[1]] = (float)(valss)
        else:
            b[words[0]] = {}
            b[words[0]][words[1]] = (float)(valss)
    count=0
    #file1=open("C:/Users/Rishabh/Desktop/HmmCorpus/train.txt",'r')
    f1=sys.argv[1]
    file2=open(f1,'r')
    file3 = open("hmmoutput.txt", 'w')
    if '' in states:
        states.remove('')

    sentences=file2.read()
    c=0
    for sent in sentences.split("\n"):
        # sent = "A part de l' Hostalnou_de_Bianya , Llocalou , i la Vall_de_el_Bac , el municipi comprèn , a més , el poble de Capsec , que fins el 1917 donà nom a el municipi , i una sèrie d' antics llocs i parròquies , algunes d' origen romànic , que havien pertangut a els distints monestirs propers ( Riudaura , Camprodon , Sant_Pere_de_Besalú , Sant_Joan_les_Fonts , Sant_Joan_de_les_Abadesses ) : Santa_Margarida_de_Bianya , Sant_Pere_Despuig , Sant_Martí_de_Bianya ( o de Solamal ) i Sant_Martí_de_el_Clot ( o de Tornadissa ) , a la vall de Bianya ; Porreres , Llongarriu , Sant_Feliu_de_el_Bac , Sant_Miquel_de_la_Torre i Santa_Magdalena_de_el_Coll , a la vall de el Bac ; el poble i castell de Castellar_de_la_Muntanya , a la vall de Castellar , i el terme separat de la Canya ."
        sentence=sent.split(" ")
        # print sentence.__len__()
        viterbi = {}
        backpointer = {}
        beststate=""
        if sentence[0] in b and b[sentence[0]].keys()>0:
            listloop=b[sentence[0]].keys()
        else:
            listloop=states
        for i in listloop:
            if sentence[0] in b:
               itrx=float(b[sentence[0]].get(i, 0.000004))
            else:
                itrx=0.000004
            viterbi[i, 0] = float(float(a['0'].get(i,0.000004)))
            backpointer[i, 0] = '0'
    #giving value to the first word..transition prob from 0 to a state * emission prob that the word
        #C:\Python27\Lib\test2.py
        for t in range(1, sentence.__len__()):

            #if sentence[t] not in b:
            innerstates=[]
            outerstates=[]
            if sentence[t]  in b:
                outerstates=b[sentence[t]].keys()
            else:
                outerstates  = states
            for i in outerstates:
                max=0.0
                if sentence[t-1] in b and b[sentence[t-1]].keys()>0:
                    innerstates = b[sentence[t-1]].keys()
                else:
                    innerstates = states
                it3=0.0
                if sentence[t] in b:
                    it3 = float(b[sentence[t]].get((i)))
                else:
                    it3 = 0.000004
                for j in innerstates:
                    #print viterbi.get((i, t),0.000004)
                    it1=float(viterbi.get((j, t - 1), 0.000004))
                    it2=0.0
                    if j in a:
                        it2=float(a[j].get(i,0.000004))
                    else:
                        it2=0.000004
                    ans=it1 * it2 * it3
                    if max <=ans:

                            viterbi[i, t] = ans
                            max=viterbi[i,t]
                            beststate=j
                backpointer[i,t]=beststate

        max=0.0
        best=""
        finalstate=[]
        finalit1=0.00004
        finalit2=0.00004
        if sentence[sentence.__len__()-1] in b and b[sentence[sentence.__len__()-1]].keys()>0:
            finalstate=b[sentence[sentence.__len__()-1]].keys()
        else:
            finalstate=states
        for i in finalstate:
            finalit1=float(viterbi.get((i, sentence.__len__()-1),0.00004))
            if i in a:
                finalit2=float(a[i].get("End",0.00004))
            else:
                finalit1=0.00004
            finalit3=float(finalit1 * finalit2)
            if max<=(finalit3):
                max=finalit3
                best=i
        backpointer["End",sentence.__len__()]=best
        t=sentence.__len__()
        stateitr="End"
        localstr=""
        while t>0:
            #print backpointer[stateitr,t]
            st=backpointer[stateitr, t]
            st1=(sentence[t - 1])
            #if t==sentence.__len__():
            localstr=st1+"/"+st+" "+localstr
            stateitr=backpointer[stateitr,t]
            t = t-1
        if finaloutstr=="":
            finaloutstr=localstr
        else:
            finaloutstr=finaloutstr+"\n"+localstr
    file3.write(finaloutstr)
    print time.clock()-start
pass
hmmdecode()